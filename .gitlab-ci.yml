include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - test
  - sonar
  - build

services:
  - docker:19.03.12-dind

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" 
  GIT_DEPTH: "0"

test:
  stage: test
  image: node:latest
  services:
    - name: diegmonti/test_db:latest
      alias: db
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  variables:
    DB_HOST: db
    DB_PORT: 5432
    DB_USERNAME: postgres
    DB_PASSWORD: 1234
    DB_DATABASE: postgres
    POSTGRES_PASSWORD: 1234
  script:
    - cd backend
    - npm install
    - npm test
  cache:
    paths:
      - backend/node_modules/
  artifacts:
    paths:
      - backend/coverage/
    when: always
    reports:
      junit:
        - backend/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage/cobertura-coverage.xml

build:
  stage: build
  image: docker:19.03.12
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

sonarcloud-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  services:
    - name: diegmonti/test_db:latest
      alias: db
  variables:
    DB_HOST: db
    DB_PORT: 5432
    DB_USERNAME: postgres
    DB_PASSWORD: 1234
    DB_DATABASE: postgres
    POSTGRES_PASSWORD: 1234
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd backend
    - npm install
    - npm test
    - cd ../
    - sonar-scanner
  dependencies:
    - test
